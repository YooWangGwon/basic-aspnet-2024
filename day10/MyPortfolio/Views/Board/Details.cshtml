@using Westwind.AspNetCore.Markdown
@model MyPortfolio.Models.Board

@{
    ViewData["Title"] = "Board";
}

<section class="py-5">
    <div class="container px-5">
        <div>
            <div class="row">
                <div class = "col text-center">
                    <h3>
                       @Html.DisplayFor(model => model.Title)
                    </h3>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <hr/>
                </div>
            </div>
            <div class="row px-2">
                <div class="col-sm-3">@Html.DisplayFor(model=>model.UserName)</div>
                <div class="col-sm-9 text-end">
                    @Html.DisplayFor(model => model.RegDate) 작성<br/>
                    @Html.DisplayFor(model => model.ModDate) 최종 수정
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <hr />
                </div>
            </div>
            <div class="row px-2">
                <div class="col" style="min-height:200px">
                    @* @Html.DisplayFor(model => model.Contents) *@
                    @Markdown.ParseHtmlString(Model.Contents)
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <hr />
                </div>
            </div>
        </div>
        <div>
            @if(Context.Session.GetInt32("USER_LOGIN_KEY") != null)
            {
                if(Context.Session.GetString("USER_EMAIL") == @Model?.User?.UserEmail)
                {
                    <a asp-controller="Board" asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">
                        <i class="bi bi-check-square-fill"></i>
                        글 수정
                    </a>                    
                }
            }
@*              <a asp-controller="Board" asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">
                    <i class="bi bi-file-earmark-x-fill"></i>
                    글 삭제
                </a> 
                <a class="btn btn-danger" id="btnDelete">글 삭제</a> *@

            @if (Context.Session.GetInt32("USER_LOGIN_KEY") != null)
            {
                if (Context.Session.GetString("USER_EMAIL") == @Model?.User?.UserEmail)
                {
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#delModal">글삭제</button>
                }
            }
            <a asp-controller="Board" asp-action="Index" class="btn btn-success">
                <i class="bi bi-list-ul"></i>
                목록
            </a>
        </div>
    </div>
</section>


@section Scripts{
    <!-- Modal -->
    <div class="modal fade" id="delModal" tabindex="-1" aria-labelledby="delModalLabel aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">삭제 확인</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    삭제하시겠습니까?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnDirectDelete">예</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">아니요</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(() => { 
            // html 화면이 다랜더링 되고 나면 설정들을 하겠다
            $('#btnDelete').click(() => {
                var id = @Model?.Id;
                if(confirm("삭제하시겠습니까?")){
                    // alert(id + '삭제하겠습니다.')
                    $.ajax({
                        url: '/api/BoardRest/' + id,
                        type: 'DELETE',
                        dataType: 'text',
                        success: (data) => {
                            window.location.href = '@Url.Action("Index")';
                        }
                    });
                }
            });

            $('#btnDirectDelete').click(() => {
                var id = @Model?.Id;
                $.ajax({
                    url: '/api/BoardRest/' + id,
                    type: 'DELETE',
                    dataType: 'text',
                    success: (data) => {
                        window.location.href = '@Url.Action("Index")';
                    }
                });
            });
        });

        // // 삭제 여부 함수
        // function confirmDelete(id){
        //     var result = confirm("삭제하시겠습니까?");// 1(true) : 0(false)

        //     if (result) {
        //         // alert(id);
        //         // 삭제 POST를 실행
        //         $.ajax({
        //             // url: 'https//localhost:7291/Board/Delete/' + id를 이렇게 쓰는 것은 구식방식(ip나 port번호가 변경될 때 마다 변경해야함)
        //             url: '@Url.Action("Delete")/' + id,
        //             type: 'POST'    // POST 액션 메서드
        //             success: function(data) {
        //                 window.location.href = @Url.Action("Index");    // 문자열로 변경(중요!)
        //             }
        //         });
        //     }
        // }
    </script>
}